// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id         Int     @id @default(autoincrement())
  first_name String
  last_name  String
  email      String  @unique
  password   String
  orders     Order[]
  like       Like[]
  role       String  @default("user")
}

model Flower {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  slug        String        @unique
  description String
  price       Int
  image_url   String
  created_at  DateTime      @default(now())
  orderDetail OrderDetail[]
  like        Like[]
}

model Order {
  id          Int           @id @default(autoincrement())
  userId      Int
  date        DateTime      @default(now())
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  orderDetail OrderDetail[]
}

model OrderDetail {
  orderId  Int
  flowerId Int
  order    Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)
  flower   Flower @relation(fields: [flowerId], references: [id], onDelete: Cascade)
  quantity Int // Exemple de champ suppl√©mentaire

  @@id([orderId, flowerId])
}

model Like {
  userId   Int
  flowerId Int
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  flower   Flower @relation(fields: [flowerId], references: [id], onDelete: Cascade)

  @@id([userId, flowerId])
}
